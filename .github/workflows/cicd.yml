name: Go CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
      - name: Create .env file
        run: |
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" > .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "CLOUDINARY_URL=${{ secrets.CLOUDINARY_URL }}" >> .env
          echo "ADMIN_DEFAULT_PASSWORD=${{ secrets.ADMIN_DEFAULT_PASSWORD }}" >> .env
          echo "CORS_ORIGINS=${{ secrets.CORS_ORIGINS }}" >> .env
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker Image
        run: docker build -t abdulridhoramadhan/go-app .
      - name: Push Docker Image
        run: docker push abdulridhoramadhan/go-app:latest

  deploy:
    needs: build
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Clean Docker System
        run: |
          docker system prune -a -f --volumes
          docker volume rm postgres_data || true

      - name: Pull Docker Image
        run: docker pull abdulridhoramadhan/go-app:latest

      - name: Create Docker network
        run: docker network create app-network || true

      - name: Delete old PostgreSQL container
        run: docker rm -f postgres-container || true

      - name: Run PostgreSQL
        run: |
          docker run -d \
            --name postgres-container \
            --network app-network \
            -e POSTGRES_USER=${{ secrets.DB_USER }} \
            -e POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e POSTGRES_DB=${{ secrets.DB_NAME }} \
            -v postgres_data:/var/lib/postgresql/data \
            postgres:latest

      - name: Wait for PostgreSQL
        run: |
          until docker exec postgres-container pg_isready -h localhost -U ${{ secrets.DB_USER }}; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done

      - name: Delete old container
        run: docker rm -f go-app-container || true

      - name: Run Docker Image
        run: |
          docker run -d \
            --name go-app-container \
            --network app-network \
            -p 80:80 \
            -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
            -e PORT=${{ secrets.PORT }} \
            -e DB_HOST=postgres-container \
            -e DB_PORT=${{ secrets.DB_PORT }} \
            -e DB_USER=${{ secrets.DB_USER }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e DB_NAME=${{ secrets.DB_NAME }} \
            -e CLOUDINARY_URL=${{ secrets.CLOUDINARY_URL }} \
            -e ADMIN_DEFAULT_PASSWORD=${{ secrets.ADMIN_DEFAULT_PASSWORD }} \
            -e CORS_ORIGINS=${{ secrets.CORS_ORIGINS }} \
            ${{ secrets.DOCKER_USERNAME }}/go-app:latest
